name: Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.runner }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ubuntu-latest
            host: x86_64-unknown-linux-gnu
            target: x86_64-unknown-linux-gnu
            artifact: flick-sync-linux-x64.tar.bz2
          - runner: macos-latest
            host: aarch64-apple-darwin
            target: aarch64-apple-darwin
            artifact: flick-sync-mac.tar.bz2
          - runner: ubuntu-latest
            host: x86_64-unknown-linux-gnu
            target: arm-unknown-linux-gnueabihf
            artifact: flick-sync-linux-armhf.tar.bz2
          - runner: ubuntu-latest
            host: x86_64-unknown-linux-gnu
            target: aarch64-unknown-linux-gnu
            artifact: flick-sync-linux-arm64.tar.bz2

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.rustup
            target/
          key: ${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        run: |
          rustup toolchain install stable
          rustup default stable

      - name: Install cross
        if: ${{ matrix.target != matrix.host }}
        run: |
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Cross compile
        if: ${{ matrix.target != matrix.host }}
        run: cross build --release --features vendored-openssl --target ${{ matrix.target }}

      - name: Build
        if: ${{ matrix.target == matrix.host }}
        run: cargo build --release --features vendored-openssl --target-dir target/${{ matrix.target }}

      - name: Compress
        run: tar -cjf ${{ matrix.artifact }} -C target/${{ matrix.target }}/release flick-sync

      - name: Upload build artifact
        uses: actions/upload-artifact@v4

        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}

  upload-cli:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    name: Upload
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

        with:
          path: artifacts

      - name: Upload binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: artifacts/*/*.tar.bz2
          tag: ${{ github.ref }}
